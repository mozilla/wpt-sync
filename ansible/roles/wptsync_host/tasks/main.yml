---
# assuming _image_name variable is defined in call to ansible-playbook
- name: ensure wpt_user is in docker group
  user:
    name: "{{ wpt_user | mandatory }}"
    groups: docker
    append: yes

- name: Add the wptsync user uid as a user in the host
  user:
    name: wptsync
    comment: App user
    uid: "{{ app_uid }}"
    create_home: false

- name: Add the rabbitmq user uid as a user in the host
  user:
    name: rabbitmq
    comment: App rabbitmq user
    uid: "{{ rabbitmq_uid }}"
    create_home: false

- name: ensure git is installed
  yum:
    name: git
    state: latest

- name: checkout latest master in wpt-sync repo
  git:
    repo: "{{ wptsync_repo_url | mandatory }}"
    dest: "{{ wptsync_repo_path | mandatory }}"
    version: "{{ lookup('env','WPT_REV') | default('origin/master') }}"
    depth: 1
    accept_hostkey: yes
    force: yes
  become_user: wpt_user

- name: ensure directories expected by docker container
  file:
    path: "{{ item }}"
    state: directory
    owner: wpt_user
    group: wpt
    mode: 0775
  with_items:
    - "{{ mount_repos | mandatory }}"
    - "{{ mount_repos | mandatory }}/gecko"
    - "{{ mount_repos | mandatory }}/web-platform-tests"
    - "{{ mount_repos | mandatory }}/wpt-metadata"
    - "{{ mount_workspace| mandatory }}"
    - "{{ mount_workspace| mandatory }}/logs"
    - "{{ mount_workspace| mandatory }}/locks"
    - "{{ mount_config | mandatory }}"
    - "{{ mount_config | mandatory }}/prod"
    - "{{ mount_config | mandatory }}/prod/{{ ssh_dir | mandatory }}"

- name: install docker-run helper script
  template:
    src: "{{ item }}.j2"
    dest: "{{ internal_volume | mandatory }}/{{ item }}"
    mode: 0755
  with_items:
    - run_docker.sh
  become_user: wpt_user

- name: install system config
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: wptsync
    group: wptsync
    mode: 0600
  with_items:
    - { src: "{{ host_config }}/gecko_config", dest: "{{ mount_config }}/gecko_config" }
    - { src: "{{ host_config }}/wpt_config", dest: "{{ mount_config }}/wpt_config" }
    - { src: "{{ host_config }}/wpt-metadata_config", dest: "{{ mount_config }}/wpt-metadata_config" }
    - { src: "{{ host_config }}/newrelic.ini", dest: "{{ mount_config }}/newrelic.ini" }
    - { src: "{{ host_config }}/rabbitmq.conf", dest: "{{ mount_config }}/rabbitmq.conf" }

- name: install sync config (if environment variables are configured)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: wptsync
    group: wptsync
    mode: 0600
  with_items:
    - { src: "{{ _sync_ini }}", dest: "{{ mount_config }}/prod/sync.ini" }
  when: update_config

- name: install credentials (if environment variables are configured)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: wptsync
    group: wptsync
    mode: 0600
  with_items:
    - { src: "{{ _ssh_hgmo }}", dest: "{{ mount_config }}/prod/{{ ssh_dir }}/id_hgmo" }
    - { src: "{{ _ssh_hgmo }}.pub", dest: "{{ mount_config }}/prod/{{ ssh_dir }}/id_hgmo.pub" }
    - { src: "{{ _ssh_github }}", dest: "{{ mount_config }}/prod/{{ ssh_dir }}/id_github" }
    - { src: "{{ _ssh_github }}.pub", dest: "{{ mount_config }}/prod/{{ ssh_dir }}/id_github.pub" }
    - { src: "{{ _credentials }}", dest: "{{ mount_config }}/prod/credentials.ini" }
  when: update_credentials

- name: chown mount-directories to docker container's UID (this may take a while)
  file:
    path: "{{ item }}"
    owner: wptsync
    group: wptsync
    recurse: yes
  with_items:
    - "{{ mount_repos | mandatory }}"
    - "{{ mount_workspace| mandatory }}"

- name: ensure rabbitmq user can create files in workspace/logs/rabbitmq
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
    owner: rabbitmq
    group: rabbitmq
    recurse: yes
  with_items:
    - "{{ mount_workspace| mandatory }}/logs/rabbitmq"

- name: Ensure git config has the correct owner
  file:
    path: "{{ mount_repos }}/gecko/config"
    owner: wptsync
    group: wptsync
    mode: 0644

- import_tasks: push-docker-img.yml
  when: rebuild
